name: Build Executables

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]
        python-version: [3.10.7]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv build_venv
          ./build_venv/Scripts/activate
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          ./build_venv/Scripts/activate
          ./build_venv/Scripts/pyinstaller --windowed --icon=ui/icon.ico --add-data "./ui/icon.ico;ui/" --add-data "./ui/icon.png;ui/" --add-data "./adb-bin/;adb-bin/" --add-data "./server/scrcpy-server;server/" --add-data "./build_venv/Lib/site-packages/customtkinter;customtkinter/" main.py
        env:
          PYTHONUNBUFFERED: 1

      # - name: Archive Linux executable
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   run: zip -j output/InputShare-linux-x64.zip dist/main/
      #   shell: bash
      # - name: Archive MacOS executable
      #   if: ${{ matrix.os == 'macos-latest' }}
      #   run: zip -j output/macos_your_script.zip dist/main/
      #   shell: bash
      - name: Archive Windows executable
        if: ${{ matrix.os == 'windows-latest' }}
        run: Compress-Archive -Path dist/main/ -DestinationPath InputShare-win-x64.zip
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: output/macos_your_script.zip